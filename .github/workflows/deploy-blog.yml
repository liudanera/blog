name: deploy-blog

on:
  # 每当 push 到 main 分支时触发部署
  push:
    branches: [main]
  # 手动触发部署
  workflow_dispatch:

jobs:
  deploy-blog:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          # “最近更新时间” 等 git 日志相关信息，需要拉取全部提交记录
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          # 选择要使用的 pnpm 版本
          version: 7
          # 使用 pnpm 安装依赖
          run_install: true

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          # 选择要使用的 node 版本
          node-version: 18
          # 缓存 pnpm 依赖
          cache: pnpm

      # 运行构建脚本
      - name: Build VuePress site
        run: pnpm docs:build

      # 查看 workflow 的文档来获取更多信息
      # @see https://github.com/crazy-max/ghaction-github-pages
      - name: Deploy to GitHub Pages
        uses: crazy-max/ghaction-github-pages@v2
        with:
          # 部署到 gh-pages 分支
          target_branch: gh-pages
          # 部署目录为 VuePress 的默认输出目录
          build_dir: docs/.vuepress/dist
        env:
          # @see https://docs.github.com/cn/actions/reference/authentication-in-a-workflow#about-the-github_token-secret
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
#      - name: 上传构建好的项目到服务器
#        uses: mdallasanta/ssh-scp-deploy@v1.2.0
#        with:
#          local: 'docs/.vuepress/dist/*'                               # Local file path - REQUIRED false - DEFAULT ./
#          remote: '/var/www/blog'                                      # Remote file path - REQUIRED false - DEFAULT ~/
#          host: ${{secrets.SERVER_IP}}                                 # Remote server address - REQUIRED true
#          user: ${{secrets.SERVER_USER}}                               # Remote server user - REQUIRED true
#          password: ${{secrets.SERVER_PWD}}                            # User password - REQUIRED at least one of "password" or "key"
#          pre_upload: rm -rf /var/www/blog_bak && mv /var/www/blog /var/www/blog_bak              # Command to run via ssh before scp upload - REQUIRED false
